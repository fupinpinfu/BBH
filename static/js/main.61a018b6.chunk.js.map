{"version":3,"sources":["components/Navbar/MenuItems.js","components/Navbar/Navbar.js","components/ReportInOut.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItems","title","url","cName","hidden","NavbarMain","logout","a","Navbar","className","variant","expand","Brand","href","Toggle","Collapse","id","Nav","activeKey","window","location","pathname","map","item","index","Link","NavDropdown","Item","onClick","Form","inline","FormControl","type","placeholder","Button","Component","ReportInOut","useState","Date","user","setUser","year","setYear","month","setMonth","datareport","setDatareport","selectYearFrom","SetselectYearFrom","selectMonthFrom","SetselectMonthFrom","selectYearTo","SetselectYearTo","selectMonthTo","SetselectMonthTo","selectUser","SetselectUser","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","useEffect","getUser","getYear","arrMonth","i","push","getMonth","arrYear","nowYear","getFullYear","UserCol","collection","getDocs","UserSnapshot","UserList","docs","doc","my_object","data","userid","value","Name","search","fromday","today","lastDayOfMonth","console","log","q","query","where","orderBy","querySnapshot","stamplist","forEach","moment","stampin","toDate","toDateString","format","stampout","Row","Col","md","onChange","event","target","bind","this","selected","style","height","width","rowClassRules","rowData","field","cellStyle","params","color","App","exact","path","render","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.61a018b6.chunk.js","sourcesContent":["export const MenuItems = [\r\n    {\r\n        title: 'Interest',\r\n        url: '/Interest',\r\n        cName: 'nav-links',\r\n        hidden:true\r\n    },\r\n    {\r\n        title: 'Company',\r\n        url: '/customer',\r\n        cName: 'nav-links',\r\n        hidden:false\r\n    },\r\n    {\r\n        title: 'Users',\r\n        url: '/Production',\r\n        cName: 'nav-links',\r\n        hidden:false\r\n    },\r\n    {\r\n        title: 'Report',\r\n        url: '/ReportInOut',\r\n        cName: 'nav-links',\r\n        hidden:false,\r\n    },\r\n    // {\r\n    //     title: 'Logout',\r\n    //     url: '/login',\r\n    //     cName: 'nav-links',\r\n    //     hidden:false,\r\n    //     logout:true,\r\n    // },\r\n]","import React, { Component } from 'react';\r\nimport { MenuItems } from \"./MenuItems\"\r\nimport { Navbar, NavDropdown, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\nimport '../../css/Navbar.css'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass NavbarMain extends Component {\r\n  render() {\r\n    // let LoginName = localStorage.getItem('LoginName');\r\n    // if(!LoginName)\r\n    //   window.location.href = '/login';\r\n    const logout = async () => {\r\n      // localStorage.clear();\r\n      // //history.replace('/Production');\r\n      // //this.props.history.replace('/login');\r\n      // const r = window.confirm(\"Do you want to Sign Out?\");\r\n      // if(r == true){\r\n      //   window.location.href = '/login';\r\n      // }\r\n\r\n      // //this.props.history.replaceState('/login')\r\n    }\r\n\r\n    return (\r\n      <Navbar className='container-fluid navbar navbar-expand-lg navbar-dark bg-dark' variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand className=\"banner\" href=\"#home\">Attendance</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav activeKey={window.location.pathname} className=\"mr-auto basic-navbar-nav\">\r\n            {\r\n              MenuItems.map((item, index) => {\r\n                return (\r\n                  <li key={index} >\r\n                    {/* <Link className={item.cName} to={item.url}>{item.title}</Link> */}\r\n                    <Nav.Link href={item.url} hidden={item.hidden} >{item.title}</Nav.Link>\r\n                    {/* <a className={item.cName} href={item.url} > {item.title} </a> */}\r\n                  </li >\r\n                )\r\n              })\r\n            }\r\n  \r\n          </Nav>\r\n         \r\n          <NavDropdown  title='Hi !!!' id=\"basic-nav-nav\">\r\n            <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\r\n          </NavDropdown>\r\n        \r\n          <Form inline hidden>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarMain","\r\nimport React, { useState, useEffect } from 'react';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, getDocs, query, where, orderBy } from 'firebase/firestore/lite';\r\nimport { Row, FormControl, Form, Button, Col } from 'react-bootstrap';\r\n\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport moment from 'moment'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n\r\nexport default function ReportInOut() {\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyDOXFKM8FWObwsFbyqA6dqnQGTNfQDLGUo\",\r\n    authDomain: \"bbhtime-fa236.firebaseapp.com\",\r\n    databaseURL: \"https://bbhtime-fa236.firebaseio.com\",\r\n    projectId: \"bbhtime-fa236\",\r\n    storageBucket: \"bbhtime-fa236.appspot.com\",\r\n    messagingSenderId: \"351132412421\",\r\n    appId: \"1:351132412421:web:82938d9c881c1908e8ca6c\"\r\n  };\r\n\r\n  //   const rowData = [\r\n  //     {make: \"Toyota\", model: \"Celica\", price: 35000},\r\n  //     {make: \"Ford\", model: \"Mondeo\", price: 32000},\r\n  //     {make: \"Porsche\", model: \"Boxter\", price: 72000}\r\n  // ];\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [user, setUser] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [month, setMonth] = useState([]);\r\n\r\n  const [datareport, setDatareport] = useState([]);\r\n\r\n  const [selectYearFrom, SetselectYearFrom] = useState(0);\r\n  const [selectMonthFrom, SetselectMonthFrom] = useState(0);\r\n\r\n  const [selectYearTo, SetselectYearTo] = useState(0);\r\n  const [selectMonthTo, SetselectMonthTo] = useState(0);\r\n\r\n  const [selectUser, SetselectUser] = useState(0);\r\n  // Initialize Firebase\r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getFirestore(app);\r\n\r\n  useEffect(async () => {\r\n    async function getUser() {\r\n      const UserCol = collection(db, 'User');\r\n      const UserSnapshot = await getDocs(UserCol);\r\n      const UserList = [];\r\n      UserSnapshot.docs.map(doc => {\r\n        let my_object = {};\r\n        my_object.id = doc.data().userid;\r\n        my_object.value = doc.data().Name;\r\n        UserList.push(my_object);\r\n      });\r\n      setUser(UserList);\r\n    }\r\n\r\n    async function getYear() {\r\n      let arrYear = [];\r\n      let nowYear = new Date().getFullYear();\r\n      SetselectYearFrom(nowYear);\r\n      SetselectYearTo(nowYear);\r\n      arrYear.push(nowYear)\r\n      arrYear.push(nowYear - 1)\r\n      arrYear.push(nowYear - 2)\r\n      setYear(arrYear)\r\n    };\r\n\r\n    async function getMonth() {\r\n      let arrMonth = [];\r\n\r\n      for (let i = 1; i < 13; i++) {\r\n        arrMonth.push(i)\r\n      }\r\n\r\n      SetselectMonthFrom(new Date().getMonth() + 1);\r\n      SetselectMonthTo(new Date().getMonth() + 1);\r\n\r\n      setMonth(arrMonth)\r\n    };\r\n\r\n    getMonth();\r\n    getYear();\r\n    getUser();\r\n  }, [])\r\n\r\n  const handleSelectYearForm = (event) => {\r\n    console.log(event.target.value);\r\n    SetselectYearFrom(event.target.value);\r\n  }\r\n\r\n  const handleSelectYearTo = (event) => {\r\n    console.log(event.target.value);\r\n    SetselectYearTo(event.target.value);\r\n  }\r\n\r\n  const handleSelectMonthForm = (event) => {\r\n    console.log(event.target.value);\r\n    SetselectMonthFrom(event.target.value);\r\n  }\r\n\r\n  const handleSelectUser = (event) => {\r\n    console.log(event.target.value);\r\n    SetselectUser(event.target.value);\r\n  }\r\n\r\n  const handleSelectMonthTo = (event) => {\r\n    console.log(event.target.value);\r\n    SetselectMonthTo(event.target.value);\r\n  }\r\n\r\n  const search = async () => {\r\n    // console.log('selectYearFrom',selectYearFrom);\r\n    // console.log('selectMonthFrom',selectMonthFrom);\r\n    const fromday = new Date(`${selectYearFrom}-${selectMonthFrom}-01`);\r\n    const today = new Date(`${selectYearTo}-${selectMonthTo}-1`);\r\n\r\n    var lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n    console.log('lastDayOfMonth', lastDayOfMonth);\r\n    const q = query(collection(db, \"stamp\"), where(\"userid\", \"==\", selectUser), where(\"stampin\", \">=\", fromday), where(\"stampin\", \"<=\", lastDayOfMonth), orderBy(\"stampin\"));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    const stamplist = [];\r\n\r\n    querySnapshot.forEach((doc) => {\r\n      //doc.data() is never undefined for query doc snapshots\r\n\r\n      var my_object = { \"date\": moment(doc.data().stampin.toDate().toDateString()).format('DD-MM-YYYY'), \"in\": moment(doc.data().stampin.toDate()).format('HH:mm:ss'), \"out\": doc.data().stampout && moment(doc.data().stampout.toDate()).format('HH:mm:ss') };\r\n      stamplist.push(my_object);\r\n    });\r\n    //console.log('selectMonthFrom', selectMonthFrom);\r\n    // const UserCol = collection(db, 'stamp');\r\n    // const UserSnapshot = await getDocs(UserCol);\r\n    // const UserList = []; \r\n    // console.log('UserSnapshot', UserSnapshot);\r\n    // UserSnapshot.docs.map(doc => {\r\n    //     let my_object = {};\r\n    //     my_object.id = doc.data().userid;\r\n    //     my_object.value = doc.data().Name;\r\n    //     UserList.push(my_object);\r\n    //   });\r\n    //   console.log(UserList);\r\n    // setUser(UserList) ;\r\n    console.log(\"stamplist\", stamplist);\r\n    setDatareport(stamplist);\r\n  }\r\n\r\n  const dynamicCellStyleIN = params => {\r\n    if (params.value > '09:00:00') {\r\n      //mark police cells as red\r\n      return { color: 'red' };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const dynamicCellStyleOut = params => {\r\n    if (params.value < '20:00:00') {\r\n      //mark police cells as red\r\n      return { color: 'red' };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const rowClassRules = {\r\n    'bg-warning': \"!data.out\",\r\n  };\r\n\r\n  return (\r\n    <header className=\"App-header p-3\">\r\n      <Row>\r\n        <Col className='pe-0 w-25  align-items-center' md=\"auto\">\r\n          <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSelectUser.bind(this)}>\r\n            {\r\n              user.map(value => (\r\n                <option value={value.id}>{value.value}</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </Col>\r\n        <Col className='d-flex align-items-center' md=\"2\">\r\n          FROM:\r\n          <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSelectYearForm.bind(this)}>\r\n            {\r\n              year.map(value => (\r\n                <option value={value}>{value}</option>\r\n              ))\r\n            }\r\n\r\n          </select>\r\n          <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSelectMonthForm.bind(this)}>\r\n            {\r\n              month.map(value => (\r\n                <option selected={new Date().getMonth() + 1 === value} value={value}>{value}</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </Col>\r\n        <Col className='d-flex align-items-center' md=\"2\">\r\n          TO:\r\n          <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSelectYearTo.bind(this)}>\r\n            {\r\n              year.map(value => (\r\n                <option value={value}>{value}</option>\r\n              ))\r\n            }\r\n          </select>\r\n          <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSelectMonthTo.bind(this)}>\r\n            {\r\n              month.map(value => (\r\n                <option selected={new Date().getMonth() + 1 === value} value={value}>{value}</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </Col>\r\n        <Col className='p-0' md=\"auto\">\r\n          <Button variant=\"outline-success\" onClick={search}>Search</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className='mt-2'>\r\n        <Col>\r\n          <div className=\"ag-theme-alpine\" style={{ height: 400, width: '100%' }}>\r\n            <AgGridReact\r\n              rowClassRules={rowClassRules}\r\n              rowData={datareport}>\r\n              <AgGridColumn field=\"date\"></AgGridColumn>\r\n              <AgGridColumn field=\"in\" cellStyle={dynamicCellStyleIN}></AgGridColumn>\r\n              <AgGridColumn field=\"out\" cellStyle={dynamicCellStyleOut}></AgGridColumn>\r\n            </AgGridReact>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </header>\r\n  );\r\n}\r\n\r\n","import './App.css';\nimport NavbarMain from './components/Navbar/Navbar'\nimport ReportInOut from './components/ReportInOut';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n// Import the functions you need from the SDKs you need\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n \nfunction App() {\n  return (\n    <div >\n      <Router>\n        {/* <div>*/}\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <Redirect to=\"/ReportInOut\" />\n              )\n            }}\n          />\n          <div>\n            <NavbarMain />\n            <Route component={ReportInOut} path=\"/ReportInOut\" />\n          </div>\n        </Switch>\n        {/* </div> */}\n      </Router>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}